{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50362686-a19d598e286bdc8c634e59341';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n\n  const response = await axios.get(BASE_URL, { params });\n  return response.data.hits;\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('#loader');\nlet lightbox = new SimpleLightbox('.gallery a');\n\nexport function createGallery(images) {\n  const markup = images.map(img => `\n    <li class=\"gallery-item\">\n      <a href=\"${img.largeImageURL}\">\n        <img src=\"${img.webformatURL}\" alt=\"${img.tags}\" />\n      </a>\n      <div class=\"info\">\n        <p>Likes: ${img.likes}</p>\n        <p>Views: ${img.views}</p>\n        <p>Comments: ${img.comments}</p>\n        <p>Downloads: ${img.downloads}</p>\n      </div>\n    </li>\n  `).join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n  loader.classList.add('hidden');\n}\n","import { getImagesByQuery } from './js/pixabay-api.js';\nimport { createGallery, clearGallery, showLoader, hideLoader } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\n\nform.addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const query = e.currentTarget.elements['search-text'].value.trim();\n  if (!query) {\n    iziToast.error({ title: 'Error', message: 'Please enter a search term.' });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  try {\n    const images = await getImagesByQuery(query);\n    if (images.length === 0) {\n      iziToast.info({\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n      });\n    } else {\n      createGallery(images);\n    }\n  } catch (error) {\n    iziToast.error({ message: 'Failed to fetch images. Try again later.' });\n  } finally {\n    hideLoader();\n  }\n});\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","gallery","loader","lightbox","SimpleLightbox","createGallery","images","markup","img","clearGallery","showLoader","hideLoader","form","e","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAiBC,EAAO,CAC5C,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAGE,OADiB,MAAME,EAAM,IAAIJ,EAAU,CAAE,OAAAG,CAAM,CAAE,GACrC,KAAK,IACvB,CCbA,MAAME,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIC,EAAW,IAAIC,EAAe,YAAY,EAEvC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EAAO,IAAIE,GAAO;AAAA;AAAA,iBAElBA,EAAI,aAAa;AAAA,oBACdA,EAAI,YAAY,UAAUA,EAAI,IAAI;AAAA;AAAA;AAAA,oBAGlCA,EAAI,KAAK;AAAA,oBACTA,EAAI,KAAK;AAAA,uBACNA,EAAI,QAAQ;AAAA,wBACXA,EAAI,SAAS;AAAA;AAAA;AAAA,GAGlC,EAAE,KAAK,EAAE,EAEVP,EAAQ,mBAAmB,YAAaM,CAAM,EAC9CJ,EAAS,QAAO,CAClB,CAEO,SAASM,GAAe,CAC7BR,EAAQ,UAAY,EACtB,CAEO,SAASS,GAAa,CAC3BR,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASS,GAAa,CAC3BT,EAAO,UAAU,IAAI,QAAQ,CAC/B,CC/BA,MAAMU,EAAO,SAAS,cAAc,OAAO,EAC3B,SAAS,cAAc,UAAU,EAEjDA,EAAK,iBAAiB,SAAU,MAAMC,GAAK,CACzCA,EAAE,eAAc,EAEhB,MAAMf,EAAQe,EAAE,cAAc,SAAS,aAAa,EAAE,MAAM,OAC5D,GAAI,CAACf,EAAO,CACVgB,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,EACzE,MACD,CAEDL,IACAC,IAEA,GAAI,CACF,MAAMJ,EAAS,MAAMT,EAAiBC,CAAK,EACvCQ,EAAO,SAAW,EACpBQ,EAAS,KAAK,CACZ,QAAS,0EACjB,CAAO,EAEDT,EAAcC,CAAM,CAEvB,MAAe,CACdQ,EAAS,MAAM,CAAE,QAAS,0CAA4C,CAAA,CAC1E,QAAY,CACRH,GACD,CACH,CAAC"}